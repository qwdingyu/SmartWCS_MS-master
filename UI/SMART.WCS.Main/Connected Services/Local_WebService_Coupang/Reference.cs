//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMART.WCS.Main.Local_WebService_Coupang {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LiveUpdateMember", Namespace="http://schemas.datacontract.org/2004/07/Coupang.ColumnMember")]
    [System.SerializableAttribute()]
    public partial class LiveUpdateMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CommonLiveUpdateFileListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AppLiveUpdateFileListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ServerVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LiveUpdateResultCDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LiveUpdateResultMsgField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CommonLiveUpdateFileList {
            get {
                return this.CommonLiveUpdateFileListField;
            }
            set {
                if ((object.ReferenceEquals(this.CommonLiveUpdateFileListField, value) != true)) {
                    this.CommonLiveUpdateFileListField = value;
                    this.RaisePropertyChanged("CommonLiveUpdateFileList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string[] AppLiveUpdateFileList {
            get {
                return this.AppLiveUpdateFileListField;
            }
            set {
                if ((object.ReferenceEquals(this.AppLiveUpdateFileListField, value) != true)) {
                    this.AppLiveUpdateFileListField = value;
                    this.RaisePropertyChanged("AppLiveUpdateFileList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Collections.Generic.Dictionary<string, string> ServerVersion {
            get {
                return this.ServerVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerVersionField, value) != true)) {
                    this.ServerVersionField = value;
                    this.RaisePropertyChanged("ServerVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string LiveUpdateResultCD {
            get {
                return this.LiveUpdateResultCDField;
            }
            set {
                if ((object.ReferenceEquals(this.LiveUpdateResultCDField, value) != true)) {
                    this.LiveUpdateResultCDField = value;
                    this.RaisePropertyChanged("LiveUpdateResultCD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string LiveUpdateResultMsg {
            get {
                return this.LiveUpdateResultMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.LiveUpdateResultMsgField, value) != true)) {
                    this.LiveUpdateResultMsgField = value;
                    this.RaisePropertyChanged("LiveUpdateResultMsg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeployServerFileInfo", Namespace="http://schemas.datacontract.org/2004/07/Coupang.ColumnMember")]
    [System.SerializableAttribute()]
    public partial class DeployServerFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object>[] ServerFileInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultCDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultMsgField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object>[] ServerFileInfo {
            get {
                return this.ServerFileInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerFileInfoField, value) != true)) {
                    this.ServerFileInfoField = value;
                    this.RaisePropertyChanged("ServerFileInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string ResultCD {
            get {
                return this.ResultCDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultCDField, value) != true)) {
                    this.ResultCDField = value;
                    this.RaisePropertyChanged("ResultCD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ResultMsg {
            get {
                return this.ResultMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultMsgField, value) != true)) {
                    this.ResultMsgField = value;
                    this.RaisePropertyChanged("ResultMsg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Coupang")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Local_WebService_Coupang.ICoupangWebService")]
    public interface ICoupangWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoupangWebService/GetServerFileListInfo", ReplyAction="http://tempuri.org/ICoupangWebService/GetServerFileListInfoResponse")]
        SMART.WCS.Main.Local_WebService_Coupang.LiveUpdateMember GetServerFileListInfo(string _strAppName, System.Collections.Generic.Dictionary<string, string> _dicLocalVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoupangWebService/GetServerFileListInfo", ReplyAction="http://tempuri.org/ICoupangWebService/GetServerFileListInfoResponse")]
        System.Threading.Tasks.Task<SMART.WCS.Main.Local_WebService_Coupang.LiveUpdateMember> GetServerFileListInfoAsync(string _strAppName, System.Collections.Generic.Dictionary<string, string> _dicLocalVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoupangWebService/GetDeployServerFileInfo", ReplyAction="http://tempuri.org/ICoupangWebService/GetDeployServerFileInfoResponse")]
        SMART.WCS.Main.Local_WebService_Coupang.DeployServerFileInfo GetDeployServerFileInfo(string _strAppName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoupangWebService/GetDeployServerFileInfo", ReplyAction="http://tempuri.org/ICoupangWebService/GetDeployServerFileInfoResponse")]
        System.Threading.Tasks.Task<SMART.WCS.Main.Local_WebService_Coupang.DeployServerFileInfo> GetDeployServerFileInfoAsync(string _strAppName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoupangWebService/GetData", ReplyAction="http://tempuri.org/ICoupangWebService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoupangWebService/GetData", ReplyAction="http://tempuri.org/ICoupangWebService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoupangWebService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ICoupangWebService/GetDataUsingDataContractResponse")]
        SMART.WCS.Main.Local_WebService_Coupang.CompositeType GetDataUsingDataContract(SMART.WCS.Main.Local_WebService_Coupang.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoupangWebService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ICoupangWebService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<SMART.WCS.Main.Local_WebService_Coupang.CompositeType> GetDataUsingDataContractAsync(SMART.WCS.Main.Local_WebService_Coupang.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICoupangWebServiceChannel : SMART.WCS.Main.Local_WebService_Coupang.ICoupangWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoupangWebServiceClient : System.ServiceModel.ClientBase<SMART.WCS.Main.Local_WebService_Coupang.ICoupangWebService>, SMART.WCS.Main.Local_WebService_Coupang.ICoupangWebService {
        
        public CoupangWebServiceClient() {
        }
        
        public CoupangWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoupangWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoupangWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoupangWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SMART.WCS.Main.Local_WebService_Coupang.LiveUpdateMember GetServerFileListInfo(string _strAppName, System.Collections.Generic.Dictionary<string, string> _dicLocalVersion) {
            return base.Channel.GetServerFileListInfo(_strAppName, _dicLocalVersion);
        }
        
        public System.Threading.Tasks.Task<SMART.WCS.Main.Local_WebService_Coupang.LiveUpdateMember> GetServerFileListInfoAsync(string _strAppName, System.Collections.Generic.Dictionary<string, string> _dicLocalVersion) {
            return base.Channel.GetServerFileListInfoAsync(_strAppName, _dicLocalVersion);
        }
        
        public SMART.WCS.Main.Local_WebService_Coupang.DeployServerFileInfo GetDeployServerFileInfo(string _strAppName) {
            return base.Channel.GetDeployServerFileInfo(_strAppName);
        }
        
        public System.Threading.Tasks.Task<SMART.WCS.Main.Local_WebService_Coupang.DeployServerFileInfo> GetDeployServerFileInfoAsync(string _strAppName) {
            return base.Channel.GetDeployServerFileInfoAsync(_strAppName);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public SMART.WCS.Main.Local_WebService_Coupang.CompositeType GetDataUsingDataContract(SMART.WCS.Main.Local_WebService_Coupang.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<SMART.WCS.Main.Local_WebService_Coupang.CompositeType> GetDataUsingDataContractAsync(SMART.WCS.Main.Local_WebService_Coupang.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
