<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="30" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <!--<Style TargetType="{x:Type Button}">
                <Setter Property="Height" Value="60" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="FontWeight" Value="Bold" />                
            </Style>-->
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="TextBlockColumnHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="50"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#ed726d"/>
    </Style>

    <Style x:Key="TextBlockContentStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="50"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="BorderColumnHeaderStyle" TargetType="Border">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="BorderContentStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style  x:Key="DataGridColumnHeaderCenter"    TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment"  Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#ed6e69"/>
        <!--<Setter Property="Height" Value="50"/>-->
    </Style>

    <Style  x:Key="DataGridColumnHeaderSmallCenter"    TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment"  Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#ed6e69"/>
        <!--<Setter Property="Height" Value="50"/>-->
    </Style>


    <Style x:Key="DataGridColumnRight"  TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="#B3B3B3" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.TextAlignment" Value="Right" />
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize" Value="24"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height"   Value="40"/>
        <Setter Property="IsEditing" Value="False" />

    </Style>

    <Style x:Key="DataGridColumnCenter" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="#B3B3B3" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.TextAlignment"  Value="Center" />
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize" Value="24"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height"   Value="40"/>
        <Setter Property="IsEditing" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnLeft"   TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="#B3B3B3" />
                <Setter Property="TextElement.Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize"   Value="24"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height"   Value="40"/>
        <Setter Property="IsEditing" Value="False" />
    </Style>

    <Style x:Key="DataGridColumnSmallRight"  TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="#B3B3B3" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.TextAlignment" Value="Right" />
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize" Value="18"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height"   Value="40"/>
        <Setter Property="IsEditing" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Right"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnSmallCenter" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="#B3B3B3" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.TextAlignment"  Value="Center" />
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize" Value="18"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height"   Value="40"/>
        <Setter Property="IsEditing" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnSmallLeft"   TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="#B3B3B3" />
                <Setter Property="TextElement.Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize"   Value="18"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height"   Value="40"/>
        <Setter Property="IsEditing" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnSkuNameLeft"   TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="#B3B3B3" />
                <Setter Property="TextElement.Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize"   Value="18"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height"   Value="40"/>
        <Setter Property="IsEditing" Value="False" />
        <Setter Property="TextBlock.Margin" Value="15,0,0,0"/>
    </Style>

    <Style x:Key="BoxMappingDataGridColumnDesignCenter" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="Background" Value="#cde6f7"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="IsEditing" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="TextBlock.FontSize" Value="26"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnDesignCenter" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="Background" Value="#cde6f7"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.FontSize" Value="32"/>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="IsEditing" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnDesignLeft" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="Background" Value="#cde6f7"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.FontSize" Value="32"/>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.HorizontalAlignment" Value="Left"/>
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsEditing" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="brd" CornerRadius="8" Background="#E1E1E1" BorderThickness="1" Padding="2" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#C8C8C8" TargetName="brd" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed"    Value="True">
                            <Setter Property="Background" Value="#B1B1B1" TargetName="brd" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DesignSmallButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="brd" Background="#7d90a6" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#C8C8C8" TargetName="brd" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed"    Value="True">
                            <Setter Property="Background" Value="#B1B1B1" TargetName="brd" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DesignSmallGrayButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="brd" Background="#8d8d8d" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#C8C8C8" TargetName="brd" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed"    Value="True">
                            <Setter Property="Background" Value="#B1B1B1" TargetName="brd" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DesignSmallBlueButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="brd" Background="#415975" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#C8C8C8" TargetName="brd" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed"    Value="True">
                            <Setter Property="Background" Value="#B1B1B1" TargetName="brd" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DesignButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="brd" Background="#ed6e69" BorderThickness="1" Padding="2" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" Value="#C8C8C8" TargetName="brd" />-->
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed"    Value="True">
                            <Setter Property="Background" Value="#B1B1B1" TargetName="brd" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RedDesignButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="brd" Background="#c12f29" BorderThickness="1" Padding="2" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" Value="#C8C8C8" TargetName="brd" />-->
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed"    Value="True">
                            <Setter Property="Background" Value="#B1B1B1" TargetName="brd" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderDesignStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background"  Value="White" />
        <Setter Property="BorderBrush"  Value="#dfdfdf" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#dfdfdf"/>
    </Style>

    <Style x:Key="PopUpTitleBlueStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="DataGridColumnSmallDesignCenter" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="Background" Value="#cde6f7"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsEditing" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnSmallDesignLeft" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="Background" Value="#cde6f7"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.HorizontalAlignment" Value="Left"/>
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsEditing" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>